{"version":3,"sources":["webpack:///./src/app/answers/answers.module.ts","webpack:///./src/app/answers/answers.page.html","webpack:///./src/app/answers/answers.page.scss","webpack:///./src/app/answers/answers.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,ggBAAggB,eAAe,KAAK,iBAAiB,skB;;;;;;;;;;;ACAriB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACQ;AACZ;AACU;AACJ;AACJ;AACP;AAOzC;IAME,qBACU,KAAqB,EACtB,MAAc,EACb,GAAqB,EACrB,IAAiB,EACjB,MAAuB,EACxB,OAAyB,EACzB,KAAsB;QANrB,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,QAAG,GAAH,GAAG,CAAkB;QACrB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAiB;QACxB,YAAO,GAAP,OAAO,CAAkB;QACzB,UAAK,GAAL,KAAK,CAAiB;IAC3B,CAAC;IAEL,8BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAa,IAAI,CAAC,OAAS,CAAC,CAAC,YAAY,EAAE;IACzE,CAAC;IAED,gCAAU,GAAV;QACU,wBAAM,CAAS;QACvB,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;QACzC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK;QAEzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAa,IAAI,CAAC,OAAS,CAAC,CAAC,MAAM,CAAC;YACnD,UAAU,EAAE,sDAAS,CAAC,UAAU,CAAC,UAAU,CAAC;gBAC1C,MAAM;gBACN,MAAM;aACP,CAAC;SACH,CAAC;IACJ,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IApCU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;+EAQiB,8DAAc;YACd,sDAAM;YACR,wEAAgB;YACf,yDAAW;YACT,kEAAe;YACf,wEAAgB;YAClB,8DAAe;OAbpB,WAAW,CAsCvB;IAAD,kBAAC;CAAA;AAtCuB","file":"answers-answers-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AnswersPage } from './answers.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AnswersPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AnswersPage]\r\n})\r\nexport class AnswersPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n      <ion-button (click)=\\\"rotate()\\\" ion-button icon-only>\\r\\n          <ion-icon name=\\\"arrow-round-back\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    <ion-title>Answers</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-card>\\r\\n        <div id=\\\"answers\\\">\\r\\n            <div class=\\\"answer\\\" *ngFor=\\\"let answer of (answerr | async)?.allanswers\\\">\\r\\n                <ion-card>\\r\\n                  <ion-label text-wrap> {{answer.author}} : {{ answer.Answer }} </ion-label>\\r\\n                </ion-card>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ion-card>\\r\\n\\r\\n          <ion-card>\\r\\n              <ion-item>\\r\\n                <ion-input type=\\\"text\\\" [(ngModel)]=\\\"Answer\\\">\\r\\n                    <ion-textarea rows=\\\"4\\\" placeholder=\\\"Enter Your Answer Here..\\\"></ion-textarea>\\r\\n                </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"dark\\\" (click)=\\\"addAnswerr()\\\">Send Your Answer !</ion-button>\\r\\n\\r\\n          </ion-card>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fuc3dlcnMvYW5zd2Vycy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore'\r\nimport { UserService } from '../user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router'\r\nimport { AngularFireAuth } from '@angular/fire/auth'\r\nimport { AlertController } from '@ionic/angular'\r\nimport { firestore } from 'firebase/app';\r\n\r\n@Component({\r\n  selector: 'app-answers',\r\n  templateUrl: './answers.page.html',\r\n  styleUrls: ['./answers.page.scss'],\r\n})\r\nexport class AnswersPage implements OnInit {\r\n\r\n  answerr\r\n  Answer\r\n  imageid: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public router: Router,\r\n    private afs: AngularFirestore, \r\n    private user: UserService,\r\n    private afAuth: AngularFireAuth,\r\n    public afStore: AngularFirestore,\r\n    public alert: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.imageid = this.route.snapshot.paramMap.get('id')\r\n    this.answerr = this.afs.doc(`questions/${this.imageid}`).valueChanges()\r\n  }\r\n\r\n  addAnswerr() {\r\n    const { Answer } = this\r\n    const user = this.afAuth.auth.currentUser\r\n    const author = user.email\r\n\r\n    this.afStore.doc(`questions/${this.imageid}`).update({\r\n      allanswers: firestore.FieldValue.arrayUnion({\r\n        author,\r\n        Answer\r\n      })\r\n    })\r\n  }\r\n\r\n  rotate() {\r\n    this.router.navigate(['./tabs'])\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}